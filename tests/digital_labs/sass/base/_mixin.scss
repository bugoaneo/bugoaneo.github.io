@use "sass:math";

@mixin bp($point) {
  @media (max-width: $point) {
    @content;
  }
}

@mixin land {
  @media screen and (orientation: landscape) {
    @content;
  }
}

@mixin portret {
  @media screen and (orientation: portrait) {
    @content;
  }
}

@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

@function calcFluidFontSize($f-min, $f-max, $w-min, $w-max, $units: px) {
  $f-min: strip-unit($f-min);
  $f-max: strip-unit($f-max);
  $w-min: strip-unit($w-min);
  $w-max: strip-unit($w-max);

  $k: calc(($f-max - $f-min) / ($w-max - $w-min));
  $b: $f-min - $k * $w-min;

  $b: $b + $units;

  @return calc(#{$k} * 100vw + #{$b});
}

@mixin fFS($f-min, $f-max, $w-min, $w-max, $fallback: false) {
  font-size: $f-min;

  @media (min-width: $w-min) {
    @if ($fallback) {
      font-size: $fallback;
    }

    font-size: calcFluidFontSize($f-min, $f-max, $w-min, $w-max, px);
  }

  @media (min-width: $w-max) {
    font-size: $f-max;
  }
}

@mixin row($justufy: null, $align: null) {
  display: flex;
  flex-wrap: wrap;

  @if ($justufy == "jst") {
    justify-content: flex-start;
  }

  @if ($justufy == "jend") {
    justify-content: flex-end;
  }

  @if ($justufy == "jc") {
    justify-content: center;
  }

  @if ($justufy == "jsb") {
    justify-content: space-between;
  }

  @if ($justufy == "jsa") {
    justify-content: space-around;
  }

  @if ($align == "ac") {
    align-items: center;
  }

  @if ($align == "as") {
    align-items: stretch;
  }

  @if ($align == "ab") {
    align-items: baseline;
  }

  @if ($align == "ast") {
    align-items: flex-start;
  }
}

@mixin center($axis: "both") {
  position: absolute;

  @if ($axis == "both") {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  @if $axis == "x" {
    left: 50%;
    transform: translateX(-50%);
  }

  @if $axis == "y" {
    top: 50%;
    transform: translateY(-50%);
  }
}

@function toRem($value) {
  $remValue: ($value / 16) + rem;
  @return $remValue;
}
// width: toRem(400);

@mixin arrow {
  @include center(y);
  right: 0;
  width: toRem(16);
  height: toRem(16);
  clip-path: path(
    "M3.55806 5.55806C3.80214 5.31398 4.19786 5.31398 4.44194 5.55806L8 9.11612L11.5581 5.55806C11.8021 5.31398 12.1979 5.31398 12.4419 5.55806C12.686 5.80214 12.686 6.19786 12.4419 6.44194L8.44194 10.4419C8.19786 10.686 7.80214 10.686 7.55806 10.4419L3.55806 6.44194C3.31398 6.19786 3.31398 5.80214 3.55806 5.55806Z"
  );
  background-color: currentColor;
}
