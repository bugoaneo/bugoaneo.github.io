@mixin bp($point) {
  @media (max-width: $point) {
    @content;
  }
}

@mixin bpmin($point) {
  @media (min-width: $point) {
    @content;
  }
}

@mixin land {
    @media screen and (orientation:landscape) {
        @content;
    }
}
@mixin portret {
    @media screen and (orientation:portrait) {
      @content;
    }
}


@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

@function calcFluidFontSize($f-min, $f-max, $w-min, $w-max, $units: px) {
  $f-min: strip-unit($f-min);
  $f-max: strip-unit($f-max);
  $w-min: strip-unit($w-min);
  $w-max: strip-unit($w-max);
  
  $k: ($f-max - $f-min)/($w-max - $w-min);
  $b: $f-min - $k * $w-min;

  $b: $b + $units;

  @return calc( #{$k} * 100vw + #{$b} );
}

@mixin fF($f-min, $f-max, $w-min, $w-max, $fallback: false) {
  
  font-size: $f-min;
  
  @media (min-width: $w-min) {
    @if ($fallback) {
      font-size: $fallback;
    }
    font-size: calcFluidFontSize($f-min, $f-max, $w-min, $w-max, px);  
  }
  @media (min-width: $w-max) {
    font-size: $f-max;
  }
}


@mixin in-b($align: middle) {
  display: inline-block;
  vertical-align: $align;
}


@mixin flex ($jc: space-between, $ai: center) {
  display: flex;
  flex-wrap: wrap;
  justify-content: $jc;
  align-items: $ai;
}

@mixin center($axis: 'both') {
  position: absolute;
  @if ($axis == 'both') {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  @if $axis == 'x' {
    left: 50%;
    transform: translateX(-50%);
  }
  @if $axis == 'y' {
    top: 50%;
    transform: translateY(-50%);
  }
}